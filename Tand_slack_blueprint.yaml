blueprint:
  name: Rörelsestyrd belysning 3.3 – Fullständig valfri och helt dynamisk med sol, arbetsdag och failsafe
  description: >
    Styr valfri belysning med en eller flera rörelsesensorer, tid, soluppgång/solnedgång,
    lux-tröskel, arbetsdag-kontroll, snapshot-återställning och failsafe-timer.
    Allt är valfritt – användaren väljer vilka delar som ska aktiveras, inklusive fast släcktid.
  domain: automation
  input:
    # --- Sensorer & brytare ---
    motion_sensors:
      name: Rörelsesensor(er) (valfritt)
      description: Välj en eller flera rörelsesensorer.
      default: []
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    optional_switches:
      name: Valfri manuell strömbrytare
      description: Välj brytare som triggar ljuset manuellt.
      default: []
      selector:
        entity:
          domain: switch
          multiple: true

    # --- Lampor & scener ---
    light_entity:
      name: Lampor (valfritt)
      description: Lampor som styrs om ingen scen används.
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    scene_day:
      name: Scen dagläge (valfri)
      description: Scen att aktivera på dagtid.
      default: []
      selector:
        entity:
          domain: scene
          multiple: false
    scene_night:
      name: Scen nattläge (valfri)
      description: Scen att aktivera på natten.
      default: []
      selector:
        entity:
          domain: scene
          multiple: false
    day_lights:
      name: Daglampor (valfritt)
      description: Lampor att tända under dag om ingen scen används.
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    night_lights:
      name: Nattlampor (valfritt)
      description: Lampor att tända under natt om ingen scen används.
      default: []
      selector:
        entity:
          domain: light
          multiple: true

    # --- Lux & sol ---
    lux_sensor:
      name: Lux-sensor (valfri)
      description: Lämna tom om lux inte ska användas.
      default: []
      selector:
        entity:
          domain: sensor
          device_class: illuminance
          multiple: false
    lux_threshold:
      name: Lux-tröskel
      description: Endast slå på ljus om lux är under detta värde.
      default: 50
      selector:
        number:
          min: 0
          max: 1000
          step: 1
          unit_of_measurement: lx
    use_sun_times:
      name: Använd soluppgång/solnedgång
      description: Styra dag/natt baserat på solens position.
      default: false
      selector:
        boolean: {}
    sunset_offset:
      name: Solnedgång offset
      description: Ange offset (t.ex. -02:00:00) för sol-trigger.
      default: "00:00:00"
      selector:
        text: {}
    sun_trigger_text:
      name: Input Text för sol-trigger (valfri)
      description: Loggar senaste sol-trigger.
      default: []
      selector:
        entity:
          domain: input_text

    # --- Fast släcktid ---
    fixed_off_time:
      name: Fast släcktid (valfri)
      description: Ange tid då lamporna ska släckas oavsett rörelse, t.ex. 22:00. Lämna tomt om inte behövs.
      default: []
      selector:
        time: {}

    # --- Tidsinställningar ---
    day_start:
      name: Dagstart (valfritt)
      default: "07:00:00"
      selector:
        time: {}
    day_end:
      name: Dagsslut (valfritt)
      default: "22:00:00"
      selector:
        time: {}
    night_start:
      name: Nattstart (valfritt)
      default: "22:00:00"
      selector:
        time: {}
    night_end:
      name: Nattsslut (valfritt)
      default: "07:00:00"
      selector:
        time: {}
    active_weekdays_day:
      name: Aktiva veckodagar (Dag, valfritt)
      default: []
      selector:
        select:
          multiple: true
          options: [mon, tue, wed, thu, fri, sat, sun]
    active_weekdays_night:
      name: Aktiva veckodagar (Natt, valfritt)
      default: []
      selector:
        select:
          multiple: true
          options: [mon, tue, wed, thu, fri, sat, sun]

    # --- Arbetsdag & failsafe ---
    workday_sensor:
      name: Arbetsdag-sensor (valfri)
      description: Anger om det är arbetsdag (binary_sensor). Lämna tom för att ignorera arbetsdagskontrollen.
      default: []
      selector:
        entity:
          domain: binary_sensor
          multiple: false
    failsafe_timer_day:
      name: Failsafe-timer dag (minuter)
      default: 15
      selector:
        number:
          min: 1
          max: 120
          step: 1
          unit_of_measurement: min
    failsafe_timer_night:
      name: Failsafe-timer natt (minuter)
      default: 15
      selector:
        number:
          min: 1
          max: 120
          step: 1
          unit_of_measurement: min
    input_text_last_scene:
      name: Input Text – Senaste scen (valfri)
      description: Håller reda på senaste aktiverad scen/läge.
      default: []
      selector:
        entity:
          domain: input_text

    # --- Tändtider ---
    tändtid_dag:
      name: Tändtid dag (minuter)
      description: Hur länge lampan ska vara tänd på dagen efter att rörelse upphör.
      default: 2
      selector:
        number:
          min: 0.1
          max: 120
          step: 0.1
          unit_of_measurement: minuter
          mode: box
    tändtid_natt:
      name: Tändtid natt (minuter)
      description: Hur länge lampan ska vara tänd på natten efter att rörelse upphör.
      default: 1
      selector:
        number:
          min: 0.1
          max: 120
          step: 0.1
          unit_of_measurement: minuter
          mode: box

# --- TRIGGERS ---
trigger:
  - platform: state
    entity_id: !input motion_sensors
    to: "on"
    id: motion_on
  - platform: state
    entity_id: !input motion_sensors
    from: "on"
    to: "off"
    id: motion_off
  - platform: state
    entity_id: !input optional_switches
    to: "on"
    id: switch_on
  - platform: state
    entity_id: !input light_entity
    to: "on"
    id: light_on
  - platform: sun
    event: sunrise
    id: sun_rise
  - platform: sun
    event: sunset
    offset: !input sunset_offset
    id: sun_set
  - platform: time
    at: !input fixed_off_time
    id: fixed_off

mode: parallel
max: 100

# --- VARIABLER ---
variables:
  lux_sensor: !input lux_sensor
  lux_threshold: !input lux_threshold
  scene_day: !input scene_day
  scene_night: !input scene_night
  day_lights: !input day_lights
  night_lights: !input night_lights
  light_entity_list: !input light_entity
  workday_sensor: !input workday_sensor
  sun_trigger_text: !input sun_trigger_text
  use_sun_times: !input use_sun_times
  failsafe_timer_day: !input failsafe_timer_day
  failsafe_timer_night: !input failsafe_timer_night
  tändtid_dag: !input tändtid_dag
  tändtid_natt: !input tändtid_natt
  last_scene_entity: !input input_text_last_scene
  fixed_off_time: !input fixed_off_time

condition: []

# --- ACTIONS ---
action:
  - choose:

      # DAGLÄGE via rörelse eller manuell switch
      - conditions:
          - condition: or
            conditions:
              - condition: trigger
                id: motion_on
              - condition: trigger
                id: switch_on
          - condition: template
            value_template: >
              {% set ls = lux_sensor %}
              {% if ls == [] %} true
              {% else %} (states(ls) | float(9999)) < lux_threshold
              {% endif %}
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ not use_sun_times }}"
                  - condition: time
                    after: !input day_start
                    before: !input day_end
                    weekday: !input active_weekdays_day
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ use_sun_times }}"
                  - condition: sun
                    after: sunrise
          - condition: template
            value_template: >-
              {% set w = workday_sensor %}
              {% if w == [] %}
                true
              {% else %}
                is_state(w, 'on')
              {% endif %}
        sequence:
          # Snapshot om huvudljus finns
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ light_entity_list != [] }}"
                sequence:
                  - service: scene.create
                    data:
                      scene_id: before_day_scene
                      snapshot_entities: !input light_entity

          # Prioritet: scen_dag -> daglampor -> huvudljus
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ scene_day != [] }}"
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_day
              - conditions:
                  - condition: template
                    value_template: "{{ day_lights != [] }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: !input day_lights
              - conditions:
                  - condition: template
                    value_template: "{{ light_entity_list != [] }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: !input light_entity

          # Spara senaste scen
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ last_scene_entity != [] }}"
                sequence:
                  - service: input_text.set_value
                    data:
                      entity_id: !input input_text_last_scene
                      value: "dag"
          - service: logbook.log
            data:
              name: Rörelsestyrning
              message: "Dagläge aktiverat via rörelse/manuell."

      # NATTLÄGE via rörelse eller manuell switch
      - conditions:
          - condition: or
            conditions:
              - condition: trigger
                id: motion_on
              - condition: trigger
                id: switch_on
          - condition: or
            conditions:
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ not use_sun_times }}"
                  - condition: time
                    after: !input night_start
                    before: !input night_end
                    weekday: !input active_weekdays_night
              - condition: and
                conditions:
                  - condition: template
                    value_template: "{{ use_sun_times }}"
                  - condition: sun
                    after: sunset
          - condition: template
            value_template: >
              {% set ls = lux_sensor %}
              {% if ls == [] %} true
              {% else %} (states(ls) | float(9999)) < lux_threshold
              {% endif %}
          - condition: template
            value_template: >-
              {% set w = workday_sensor %}
              {% if w == [] %}
                true
              {% else %}
                is_state(w, 'on')
              {% endif %}
        sequence:
          # Snapshot om huvudljus finns
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ light_entity_list != [] }}"
                sequence:
                  - service: scene.create
                    data:
                      scene_id: before_night_scene
                      snapshot_entities: !input light_entity

          # Prioritet: scen_natt -> nattlampor -> huvudljus
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ scene_night != [] }}"
                sequence:
                  - service: scene.turn_on
                    target:
                      entity_id: !input scene_night
              - conditions:
                  - condition: template
                    value_template: "{{ night_lights != [] }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: !input night_lights
              - conditions:
                  - condition: template
                    value_template: "{{ light_entity_list != [] }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: !input light_entity

          # Spara senaste scen
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ last_scene_entity != [] }}"
                sequence:
                  - service: input_text.set_value
                    data:
                      entity_id: !input input_text_last_scene
                      value: "natt"
          - service: logbook.log
            data:
              name: Rörelsestyrning
              message: "Nattläge aktiverat via rörelse/manuell."

      # DAG/NATT via sol-trigger
      - conditions:
          - condition: or
            conditions:
              - condition: trigger
                id: sun_rise
              - condition: trigger
                id: sun_set
        sequence:
          - choose:

              # Solen efter soluppgång => Dag
              - conditions:
                  - condition: sun
                    after: sunrise
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ light_entity_list != [] }}"
                        sequence:
                          - service: scene.create
                            data:
                              scene_id: before_day_scene
                              snapshot_entities: !input light_entity
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ scene_day != [] }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input scene_day
                      - conditions:
                          - condition: template
                            value_template: "{{ day_lights != [] }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: !input day_lights
                      - conditions:
                          - condition: template
                            value_template: "{{ light_entity_list != [] }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: !input light_entity
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ last_scene_entity != [] }}"
                        sequence:
                          - service: input_text.set_value
                            data:
                              entity_id: !input input_text_last_scene
                              value: "dag"
                  - service: logbook.log
                    data:
                      name: Rörelsestyrning
                      message: "Dagläge aktiverat via sol-trigger."

              # Solen efter solnedgång => Natt
              - conditions:
                  - condition: sun
                    after: sunset
                sequence:
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ light_entity_list != [] }}"
                        sequence:
                          - service: scene.create
                            data:
                              scene_id: before_night_scene
                              snapshot_entities: !input light_entity
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ scene_night != [] }}"
                        sequence:
                          - service: scene.turn_on
                            target:
                              entity_id: !input scene_night
                      - conditions:
                          - condition: template
                            value_template: "{{ night_lights != [] }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: !input night_lights
                      - conditions:
                          - condition: template
                            value_template: "{{ light_entity_list != [] }}"
                        sequence:
                          - service: light.turn_on
                            target:
                              entity_id: !input light_entity
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ last_scene_entity != [] }}"
                        sequence:
                          - service: input_text.set_value
                            data:
                              entity_id: !input input_text_last_scene
                              value: "natt"
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ sun_trigger_text != [] }}"
                        sequence:
                          - service: input_text.set_value
                            data:
                              entity_id: !input sun_trigger_text
                              value: "sol-trigger aktiverad"
                  - service: logbook.log
                    data:
                      name: Rörelsestyrning
                      message: "Nattläge aktiverat via sol-trigger."

      # SLÄCKNING GRADVIS via rörelse
      - conditions:
          - condition: trigger
            id: motion_off
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ light_entity_list != [] }}"
              - condition: template
                value_template: "{{ day_lights != [] or night_lights != [] }}"
        sequence:
          # Dag-spåret
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ last_scene_entity != [] and is_state(last_scene_entity, 'dag') }}"
                sequence:
                  - delay:
                      seconds: "{{ (tändtid_dag * 60) | int }}"
                  - condition: state
                    entity_id: !input motion_sensors
                    state: "off"
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ day_lights != [] }}"
                        sequence:
                          - service: light.turn_off
                            target:
                              entity_id: !input day_lights
                            data:
                              transition: 30
                      - conditions:
                          - condition: template
                            value_template: "{{ light_entity_list != [] }}"
                        sequence:
                          - service: light.turn_off
                            target:
                              entity_id: !input light_entity
                            data:
                              transition: 30
                  - service: logbook.log
                    data:
                      name: Rörelsestyrning
                      message: "Dagläge släcktes gradvis efter inaktivitet."

              # Natt-spåret
              - conditions:
                  - condition: template
                    value_template: "{{ last_scene_entity != [] and is_state(last_scene_entity, 'natt') }}"
                sequence:
                  - delay:
                      seconds: "{{ (tändtid_natt * 60) | int }}"
                  - condition: state
                    entity_id: !input motion_sensors
                    state: "off"
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ night_lights != [] }}"
                        sequence:
                          - service: light.turn_off
                            target:
                              entity_id: !input night_lights
                            data:
                              transition: 30
                      - conditions:
                          - condition: template
                            value_template: "{{ light_entity_list != [] }}"
                        sequence:
                          - service: light.turn_off
                            target:
                              entity_id: !input light_entity
                            data:
                              transition: 30
                  - service: logbook.log
                    data:
                      name: Rörelsestyrning
                      message: "Nattläge släcktes gradvis efter inaktivitet."

      # SLÄCKNING VID FAST TID
      - conditions:
          - condition: trigger
            id: fixed_off
        sequence:
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ light_entity_list != [] }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input light_entity
                    data:
                      transition: 30
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ day_lights != [] }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input day_lights
                    data:
                      transition: 30
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ night_lights != [] }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input night_lights
                    data:
                      transition: 30
          - service: logbook.log
            data:
              name: Rörelsestyrning
              message: "Lampor släcktes vid fast tid: {{ fixed_off_time }}."

  # FAILSAFE GRADVIS
  - choose:
      - conditions:
          - condition: or
            conditions:
              - condition: trigger
                id: motion_on
              - condition: trigger
                id: light_on
          - condition: or
            conditions:
              - condition: template
                value_template: "{{ light_entity_list != [] }}"
              - condition: template
                value_template: "{{ day_lights != [] or night_lights != [] }}"
        sequence:
          - delay:
              minutes: >
                {% if last_scene_entity != [] %}
                  {% set scene = states(last_scene_entity) %}
                  {{ failsafe_timer_day if scene == 'dag' else failsafe_timer_night }}
                {% else %}
                  {{ failsafe_timer_day }}
                {% endif %}
          - condition: state
            entity_id: !input motion_sensors
            state: "off"

          # Stäng av dag-/nattlampor var för sig om de finns
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ day_lights != [] }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input day_lights
                    data:
                      transition: 30
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ night_lights != [] }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input night_lights
                    data:
                      transition: 30

          # Om inga separata listor finns, stäng huvudljus
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ day_lights == [] and night_lights == [] and light_entity_list != [] }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input light_entity
                    data:
                      transition: 30

          - service: logbook.log
            data:
              name: Rörelsestyrning
              message: >
                Failsafe: Ljuset släcktes gradvis efter timeout. {% if last_scene_entity != [] %}Senaste scen: {{ states(last_scene_entity) }}.{% endif %}
